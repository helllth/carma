name: Deployment Debugging

run-name: >
  ${{ github.event.head_commit.message || 'Triggered Deployment' }}
  ${{ github.event.inputs['project-name'] || github.event.client_payload['project-name'] }} --
  ${{ github.event.inputs.target || github.event.client_payload.target || github.ref_name }}-deployment

on:
  workflow_dispatch:
    inputs:
      project-name:
        description: "Please enter a project name"
        required: true
      version-manipulator:
        description: "Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease (Will change the version number of the project.)"
        required: false
      target:
        type: choice
        description: "Where should I deploy?"
        options:
          - live
          - dev
      create-docker-image:
        type: boolean
        description: Create a Docker image? 🐳
        required: false

  push:
    branches:
      - dev

  repository_dispatch:
    types: [trigger-workflow]

jobs:
  env-prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "INPUT__PROJECT_NAME=${{ github.event.inputs['project-name'] || github.event.client_payload['project-name'] }}" >> $GITHUB_ENV
          echo "INPUT__TARGET=${{ github.event.inputs.target || github.event.client_payload.target || github.ref_name }}" >> $GITHUB_ENV
          echo "INPUT__VERSION_MANIPULATOR=${{ github.event.inputs['version-manipulator'] || github.event.client_payload['version-manipulator']  }}" >> $GITHUB_ENV

          if [ "${{ github.event.inputs['create-docker-image'] }}" != "" ]; then
            echo "INPUT__CREATE_DOCKER_IMAGE=${{ github.event.inputs['create-docker-image'] }}" >> $GITHUB_ENV
          elif [ "${{ github.event.client_payload['create-docker-image'] }}" != "" ]; then
            echo "INPUT__CREATE_DOCKER_IMAGE=${{ github.event.client_payload['create-docker-image'] }}" >> $GITHUB_ENV
          else
            echo "INPUT__CREATE_DOCKER_IMAGE=false" >> $GITHUB_ENV
          fi
  build:
    needs: env-prepare
    runs-on: ubuntu-latest
    steps:
      - name: Use environment variables from env-prepare
        run: |
          echo "Project Name: ${{ needs.env-prepare.outputs.project_name }}"
          echo "Target: ${{ needs.env-prepare.outputs.target }}"
          echo "Version Manipulator: ${{ needs.env-prepare.outputs.version_manipulator }}"
          echo "Create Docker Image: ${{ needs.env-prepare.outputs.create_docker_image }}"
